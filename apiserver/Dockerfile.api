FROM python:3.12.5-alpine AS backend

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 
ENV INSTANCE_CHANGELOG_URL https://api.plane.so/api/public/anchor/8e1c2e4c7bc5493eb7731be3862f6960/pages/

WORKDIR /code

RUN apk add --no-cache \
    "libpq" \
    "libxslt" \
    "nodejs-current" \
    "xmlsec"

COPY requirements.txt ./
COPY requirements ./requirements
RUN apk add --no-cache libffi-dev
RUN apk add --no-cache --virtual .build-deps \
    "bash~=5.2" \
    "g++" \
    "gcc" \
    "cargo" \
    "git" \
    "make" \
    "postgresql-dev" \
    "libc-dev" \
    "linux-headers" \
    && \
    pip install -r requirements.txt --compile --no-cache-dir \
    && \
    apk del .build-deps


# Add in Django deps and generate Django's static files
COPY manage.py manage.py
COPY plane plane/
COPY templates templates/
COPY package.json package.json

RUN apk --no-cache add "bash~=5.2"
COPY ./bin ./bin/

RUN mkdir -p /code/plane/logs
RUN chmod +x ./bin/*
RUN chmod -R 777 /code

EXPOSE 8000

# ENV N8N_CONFIG_FILES=/home/node/config/env.json 

# Declare a build argument
ARG ENV_FILE_PATH

# Use the build argument
COPY ${ENV_FILE_PATH} /code/plane/file.env

# Export the environment file path as an image environment variable
ENV ENV_FILE_PATH=${ENV_FILE_PATH}

RUN if [ "${ENV_TYPE}" = "apiserver" ]; then \
    python manage.py migrate --noinput; \
    fi
    
CMD if [ "${ENV_TYPE}" = "apiserver" ]; then \
    gunicorn -w 2 -k uvicorn.workers.UvicornWorker plane.asgi:application --bind 0.0.0.0:8000 --max-requests 1200 --max-requests-jitter 1000 --access-logfile -; \
    elif [ "${ENV_TYPE}" = "celery" ]; then \
    celery -A plane worker -l info; \
    elif [ "${ENV_TYPE}" = "celery-beat" ]; then \
    celery -A plane beat -l info; \
    else \
    echo "Unknown ENV_TYPE: ${ENV_TYPE}"; \
    exit 1; \
    fi
        
# Expose container port and run entry point script


