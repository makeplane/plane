upstream plane {
    server web:3000; # Next.js frontend
}

upstream api {
    server api:8000; # Backend API
}

upstream space {
    server space:3000; # Spaces service
}

upstream live {
    server live:3000;  # Live service
}

# Redirect all HTTP traffic to HTTPS
server {
    listen 80;
    server_name reyflow.com www.reyflow.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;index index.html;
        autoindex on;
        try_files $uri =404;
        allow all;
    }
    # Redirect all other HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS Configuration
server {
    listen 443 ssl;
    server_name reyflow.com www.reyflow.com;

    ssl_certificate /etc/letsencrypt/live/reyflow.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/reyflow.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Serve Let's Encrypt challenge files over HTTPS too
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        allow all;
    }

    location / {
        proxy_pass http://plane/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /api/ {
        proxy_pass http://api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /spaces/ {
        proxy_pass http://space/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /live/ {
        proxy_pass http://live/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
